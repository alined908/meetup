version: '3'

services: 
    nginx:
        build: ./nginx
        restart: always
        ports:
            - 80:80
            - 443:443
        volumes:
            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
            - ./frontend/build:/var/www/frontend
            - ./nginx/certs:/etc/nginx/certs
        depends_on: 
            - channels
            - frontend
            - backend
    db:
        image: postgres:12.0-alpine
        ports: 
            - 5432:5432
        environment: 
            - POSTGRES_USER=postgres
            - POSTGRES_HOST=db
            - POSTGRES_PASSWORD=password
        volumes:
            - postgres_data:/var/lib/postgresql/data/
    backend: &backend
        build: ./backend
        volumes: 
            - ./backend:/app
        ports: 
            - 8000:8000
        command: ["python", "manage.py", "runserver", "0.0.0.0:8000"]
        env_file:
            - ./.env
        depends_on: 
            - db
            - redis
    frontend:
        build: ./frontend
        volumes: 
            - ./frontend:/app
            - ./frontend/node_modules:/app/node_modules
        ports: 
            - 8003:8003
        stdin_open: true
    redis:
        image: "redis:5.0.7"
    worker_channels:
        <<: *backend
        command: ["python", "manage.py", "runworker", "channels"]
        depends_on:
            - db
            - redis
        ports:
            - 8002:8002
    channels:
        <<: *backend
        command: daphne -b 0.0.0.0 -p 8001 backend.asgi:application
        ports: 
            - 8001:8001
        depends_on:
            - db
            - redis

volumes:
    node_modules:
    postgres_data:
    